<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.univ-amu.fr/XML/releve" xmlns:rel="http://www.univ-amu.fr/XML/releve" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:com="http://www.univ-amu.fr/XML/commun" targetNamespace="http://www.univ-amu.fr/XML/releve" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.univ-amu.fr/XML/commun" schemaLocation="commun.xsd"/>
	<xs:element name="relevé">
		<xs:annotation>
			<xs:documentation>Relevé de comptes</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="false">
			<xs:sequence>
				<xs:element name="titulaire">
					<xs:complexType mixed="false">
						<xs:sequence>
							<xs:element name="identité" type="com:personneType"/>
							<xs:element ref="com:adresse"/>
							<xs:element ref="com:téléphone"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>Ici on peut contraindre à ce que tous les comptes figurant dans un relevé soient tous de même type : si le relevé est simple, il ne contiendra que des comptes simples, si le relevé est intermédiaire, il ne contiendra que des comptes intermédiaires et, enfin, si le relevé est complet, il ne contiendra que des comptes complets.</xs:documentation>
					</xs:annotation>
					<xs:element name="simple" type="rel:relevéSimpleType"/>
					<xs:element name="intermédiaire" type="rel:relevéIntermédiaireType"/>
					<xs:element name="complet" type="rel:relevéCompletType"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="unité" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="EURO"/>
						<xs:enumeration value="DOLLAR U.S."/>
						<xs:enumeration value="LIVRE STERLING"/>
						<xs:enumeration value="FF"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
		<xs:unique name="compteUnique">
			<xs:selector xpath=".//rel:compte"/>
			<xs:field xpath="./rel:numéro"/>
		</xs:unique>
	</xs:element>
	<xs:complexType name="relevéSimpleType">
		<xs:sequence>
			<xs:element name="compte" maxOccurs="unbounded">
				<xs:complexType mixed="false">
					<xs:complexContent>
						<xs:extension base="rel:compteSimpleType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="relevéIntermédiaireType">
		<xs:sequence>
			<xs:element name="compte" type="rel:compteIntermédiaireType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="relevéCompletType">
		<xs:sequence>
			<xs:element name="compte" maxOccurs="unbounded">
				<xs:complexType mixed="false">
					<xs:complexContent>
						<xs:extension base="rel:compteCompletType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="compteSimpleType">
		<xs:sequence>
			<xs:element name="numéro">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\d{11}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="intitulé">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="soldeActuel" type="rel:montantType"/>
			<xs:element name="dateHeureSoldeActuel" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="compteIntermédiaireType">
		<xs:complexContent>
			<xs:extension base="rel:compteSimpleType">
				<xs:sequence>
					<xs:element name="soldeInitial" type="rel:montantPositifNulType"/>
					<xs:element name="dateHeureSoldeInitial" type="xs:dateTime"/>
					<xs:element name="opérations">
						<xs:complexType mixed="false">
							<xs:sequence>
								<xs:element name="opération" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType mixed="false">
										<xs:sequence>
											<xs:element name="dateDemande" type="xs:date"/>
											<xs:element name="dateValeur" type="xs:date"/>
											<xs:element name="libellé">
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:maxLength value="50"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:element>
											<xs:element name="montant" type="rel:montantPositifType"/>
										</xs:sequence>
										<xs:attribute name="type" use="required">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="débit"/>
													<xs:enumeration value="crédit"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
						<xs:unique name="opérationUnique">
							<xs:annotation>
								<xs:documentation>On aurait pu associer cette contrainte d'intégrité à l'élément compte d'un relevé intermédiaire. Il aurait fallu dans ce cas associer la même contrainte à l'élément compte d'un relevé complet. Ici, pour simplifier et factoriser la contrainte, on la défini une fois pour toutes en l'association à l'élément opérations figurant dans le type d'un compte figurant dans un relevé intermédiaire. Comme un compte d'un relevé complet étend le compte d'un relevé intermédiaire, cette contrainte est 'récupérée' automatiquement au niveau des relevés complets.</xs:documentation>
							</xs:annotation>
							<xs:selector xpath=".//rel:opération"/>
							<xs:field xpath="./rel:libellé"/>
							<xs:field xpath="./rel:dateDemande"/>
						</xs:unique>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="compteCompletType">
		<xs:complexContent>
			<xs:extension base="rel:compteIntermédiaireType">
				<xs:sequence>
					<xs:element name="procurations">
						<xs:complexType mixed="false">
							<xs:sequence>
								<xs:element name="titulaire" type="com:personneType" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
						<xs:unique name="titulaireProcurationUnique">
							<xs:selector xpath=".//rel:titulaire"/>
							<xs:field xpath="./com:nom"/>
							<xs:field xpath="./com:prénomUsuel"/>
						</xs:unique>
					</xs:element>
					<xs:element name="portefeuille" minOccurs="0">
						<xs:complexType mixed="false">
							<xs:sequence>
								<xs:element name="actions">
									<xs:complexType mixed="false">
										<xs:sequence>
											<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
												<xs:complexType mixed="false">
													<xs:sequence>
														<xs:element name="intitulé" type="xs:string"/>
														<xs:element name="quantité" type="xs:positiveInteger"/>
														<xs:element name="coûtAchatUnitaire" type="rel:montantPositifType"/>
														<xs:element name="coûtAchatGlobal" type="rel:montantPositifType"/>
														<xs:element name="dateHeureAchat" type="xs:dateTime"/>
														<xs:element name="montantActuelUnitaire" type="rel:montantPositifType"/>
														<xs:element name="montantActuelGlobal" type="rel:montantPositifType"/>
														<xs:element name="dateHeureMontantsActuels" type="xs:dateTime"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="montant" type="montantPositifNulType"/>
								<xs:element name="dateHeureMontant" type="xs:dateTime"/>
							</xs:sequence>
						</xs:complexType>
						<xs:unique name="actionUnique">
							<xs:selector xpath=".//rel:action"/>
							<xs:field xpath="./rel:intitulé"/>
						</xs:unique>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="montantPositifNulType">
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
			<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="montantPositifType">
		<xs:restriction base="xs:decimal">
			<xs:minExclusive value="0"/>
			<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="montantType">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
